generator client {
    provider = "cargo prisma"
    output   = "../src/prisma.rs"
}

datasource db {
    provider = "mysql"
    url      = env("DB_URL")
}

model App {
    id        Int      @id @default(autoincrement())
    key       String   @unique
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    subApps   SubApp[]
    orders    Order[]
}

model SubApp {
    id        Int             @id @default(autoincrement())
    appId     Int
    app       App             @relation(fields: [appId], references: [id], onDelete: Cascade)
    key       String          @unique
    name      String
    createdAt DateTime        @default(now())
    updatedAt DateTime        @updatedAt
    channels  ChannelParams[]
    orders    Order[]
}

model ChannelParams {
    id        Int      @id @default(autoincrement())
    subAppId  Int
    subApp    SubApp   @relation(fields: [subAppId], references: [id], onDelete: Cascade)
    channel   String
    params    Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([subAppId, channel])
}

model Order {
    id                Int      @id @default(autoincrement())
    appId             Int
    app               App      @relation(fields: [appId], references: [id], onDelete: Cascade)
    subAppId          Int
    subApp            SubApp   @relation(fields: [subAppId], references: [id], onDelete: Cascade)
    orderId           String   @unique
    uid               String
    merchant_order_no String
    status            String
    paid              Boolean
    refunded          Boolean
    amount            Int
    amount_paid       Int
    amount_refunded   Int
    client_ip         String
    subject           String
    body              String
    currency          String
    time_paid         Int?
    time_expire       Int
    metadata          Json
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
}
